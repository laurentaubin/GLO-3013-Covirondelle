import os

import numpy as np

# Communication
SOCKET_DOCKER_ADDRESS = "tcp://0.0.0.0:"
PING_PORT = "5555"

SOCKET_ANY_ADDRESS = "tcp://*:"
GAME_CYCLE_PORT = "5556"
STREAM_PI_FEED_PORT = "5557"

# Pathfinding
# TODO Test at lab to find right radii value
ROBOT_RADIUS = 40
OBSTACLE_RADIUS = 12

# Vision
CALIBRATION_FILE_PATH = (
    os.path.dirname(os.path.abspath(__file__)) + "/numpy-640x480.npz"
)

LAPTOP_CAMERA_INDEX = 1
PC_CAMERA_INDEX = 1

PIXEL_TO_METERS_RATIO = 257.2
PIXEL_TO_CENTIMETERS_RATIO = 2.572

OBSTACLE_ARUCO_MARKER_ID = 0
# in meter
OBSTACLE_ARUCO_MARKER_SIZE = 0.08
ROBOT_ARUCO_MARKER_ID = 1
ROBOT_ARUCO_MARKER_SIZE = 0.12
CALIBRATION_ARRAYS = np.load(CALIBRATION_FILE_PATH)
CAMERA_MATRIX = CALIBRATION_ARRAYS["camera_matrix"]
DISTORTION_COEFFICIENTS = CALIBRATION_ARRAYS["distortion_coefficients"]

WORLD_CAMERA_IMAGE_SIZE = (640, 480)

# in meter
OBSTACLE_HEIGHT = 0.40
ROBOT_HEIGHT = 0.232

BASE_TABLE_IMAGE = (
    os.path.dirname(os.path.abspath(__file__))
    + "/../../resources/test/puck-detector-test-marker-3.jpg"
)

DEFAULT_OHMMETER_POSITION = 20, 20

GRIPPER_OFFSET = 40
DEFAULT_PUCK_ZONE_POSITION = (536, 238)

STARTING_ZONE_CORNERS_POSITION = [
    (248, 156),
    (244, 324),
    (80, 321),
    (83, 157),
]
STARTING_ZONE_CENTER_POSITION = (402, 597)
